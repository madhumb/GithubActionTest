name: iOS Build & Deploy Main

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: Build iOS with Fastlane
    runs-on: macos-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Install Flutter
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
          cache: false   

      # 3. Setup App Store Connect key
      - name: Setup App Store Connect API Key
        run: |
          flutter clean
          flutter pub get
          mkdir -p ~/.appstoreconnect/private_keys
          echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" > ~/.appstoreconnect/private_keys/AuthKey.p8
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

      # 4. Select correct Xcode version
      - name: Setup Xcode
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      # 5. Run your build shell script (calls Fastlane inside)
      - name: Run build script
        run: bash upload_ios_appstostore.sh

      # 6. Show last 50 lines of Fastlane/Xcode log (for quick debugging)
      - name: Show last lines of Fastlane log
        if: failure()
        run: |
          echo "üßæ Showing last 50 lines of Runner-star.log (if available)..."
          tail -n 50 /Users/runner/Library/Logs/gym/Runner-star.log || echo "‚ö†Ô∏è No Fastlane log file found."

      # 7. Upload full logs as artifact (downloadable)
      - name: Upload Xcode/Fastlane Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcode-fastlane-logs
          path: |
            /Users/runner/Library/Logs/gym/
            ~/Library/Logs/scan/
