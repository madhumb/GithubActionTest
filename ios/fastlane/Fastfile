# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  
  lane :beta do |options|
    scheme = options[:scheme] || "Runner"
  
    build_app(
      scheme: scheme,
      output_directory: "./build",
      output_name: "#{scheme}.ipa",
      export_method: "app-store", # Still use 'app-store' for TestFlight uploads
      export_options: {
        provisioningProfiles: {
          "com.recode.bookmark" => "Bookmark Apprstore profile",
          "com.gnkbros.app" =>"com.gnkbros.app appstore",
          "com.recode.benni" => "Benni Appstore",
          "com.recode.mybenefitplace" => "My Benefit Place AppStore",
          "com.health.strivehealth" => "StriveHealth_Appstore",
          "com.recode.pregis" => "Pregis Appstore profile",
          "com.recode.foundationwell" => "FoundationWell Appstore",
          "com.recode.byersindustrial" => "Appstore Byers Industrial",
          "com.recode.aerodyneapex" => "Aerodyne APEX Appstore",
          "com.recode.magis" => "Magis appstore profile",
          "com.recode.geotekconnect" => "GeoTek Connect Appstore",
          "com.recode.innofiberconnect" => "Innofiber Connect Appstore",
          "com.recode.pyramidhub" => "PyramidHub Appstore profile",
          "com.recode.fcccares" => "Appstore Fcc Cares",
          "com.recode.morrison" => "Morrison Appstore",
          "com.recode.harborfoods" => "Harbor appstore profile",
          "com.recode.saintfancistotalrewards" => "Saint Appstore Profile",
          "com.recode.gtrbenefits" => "GTR Appstore",
          "com.recode.bradford" => "Appstore Bradford",
          "com.recode.rollwell" => "Appstore RollWell",
          "com.recode.rbha" => "RBHA Appstore",
          "com.recode.imahealth" => "IMA_Appstore",
          "com.health.psf" => "Psf_Appstore",
          "com.recode.tustin" => "Tustin group Appstore",
          "com.recode.ahbenefits" => "AHBenefits Appstore",
          "com.recode.mcrriffjourney" => "McGriff Journey Appstore",
          "com.strive.quipthomemedical" => "quipthomemedical appstore profile",
          "com.recode.prosper" => "Prosper Appstore Profile",
          "com.recode.acrisure" => "Acrisure Appstore profile",
        }
      }
    )
  
    # Upload dSYMs to Firebase Crashlytics
    plist_path = "./config/#{scheme}/GoogleService-Info.plist"
    dsyms_path = "./build/#{scheme}.app.dSYM.zip"
  
    upload_symbols_to_crashlytics(
      gsp_path: plist_path,
      dsym_path: dsyms_path
    )
  
    # Upload to TestFlight
    ipa_path = "./build/#{scheme}.ipa"
  
    upload_to_testflight(
      ipa: ipa_path,
      skip_waiting_for_build_processing: false,
      distribute_external: false, # change to true if you want to invite external testers
      api_key: app_store_connect_api_key(
        key_id: "4M2F6PDL8N",
        issuer_id: "69a6de85-d828-47e3-e053-5b8c7c11a4d1",
        key_filepath: "/Users/madhubhilawadi/private_keys/AuthKey.p8",
        in_house: false
      )
    )
  end

  

  desc "Push a new release build to the App Store"
  lane :release do |options|
    scheme = options[:scheme] || "Runner"
 
    build_app(
      scheme: scheme,
      output_directory: "./build",
      output_name: "#{scheme}.ipa",
      export_method: "app-store",
      export_options: {
      provisioningProfiles: {
        "com.recode.benni" => "Benni Appstore",
        "com.recode.mybenefitplace" => "My Benefit Place AppStore",
        "com.health.strivehealth" => "StriveHealth_Appstore",
        "com.recode.pregis" => "Pregis Appstore profile",
        "com.recode.foundationwell" =>"FoundationWell Appstore",
        "com.recode.byersindustrial" => "Appstore Byers Industrial",
        "com.recode.aerodyneapex" => "Aerodyne APEX Appstore",
        "com.recode.magis" => "Magis appstore profile",
        "com.recode.geotekconnect" => "GeoTek Connect Appstore",
        "com.recode.innofiberconnect" =>"Innofiber Connect Appstore",
        "com.recode.pyramidhub" => "PyramidHub Appstore profile",
        "com.recode.fcccares" => "Appstore Fcc Cares",
        "com.recode.morrison" =>  "Morrison Appstore",
        "com.recode.harborfoods" => "Harbor appstore profile",
        "com.recode.saintfancistotalrewards" => "Saint Appstore Profile",
        "com.recode.gtrbenefits" => "GTR Appstore",
        "com.recode.bradford" => "Appstore Bradford",
        "com.recode.rollwell" => "Appstore RollWell",
        "com.recode.rbha" => "RBHA Appstore",
        "com.recode.imahealth" => "IMA_Appstore",
        "com.health.psf" => "Psf_Appstore",
        "com.recode.tustin" => "Tustin group Appstore",
        "com.recode.ahbenefits" =>  "AHBenefits Appstore",
        "com.recode.mcrriffjourney" => "McGriff Journey Appstore",
        "com.strive.quipthomemedical" => "quipthomemedical appstore profile",
        "com.recode.prosper" => "Prosper Appstore Profile",
        "com.recode.acrisure" => "Acrisure Appstore profile",
      }
    }
    )

    plist_path = "./config/#{scheme}/GoogleService-Info.plist"

    # Path to the dSYMs directory (Fastlane finds them automatically if built)
    dsyms_path = "./build/#{scheme}.app.dSYM.zip"

    # Upload to Firebase Crashlytics
    upload_symbols_to_crashlytics(
      gsp_path: plist_path,
      dsym_path: dsyms_path
    )
    
    ipa_path = "./build/#{scheme}.ipa",

    upload_to_app_store(
      ipa: ipa_path,
      skip_metadata: true,
      precheck_include_in_app_purchases: false,
      skip_screenshots: true,
      api_key: app_store_connect_api_key(
        key_id: "4M2F6PDL8N",
        issuer_id: "69a6de85-d828-47e3-e053-5b8c7c11a4d1",
        key_filepath: "/Users/madhubhilawadi/private_keys/AuthKey.p8",
        in_house: false
      )
    )
  end
end
